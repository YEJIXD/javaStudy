package study;

public class AbstractClass {
    /*
    # Abstract Class
      : 미완성된 클래스 / 선언되어 있지만 구현되지 않은 미완성의 메소드(추상 메소드)를 포함하고 있는 클래스일 때 반드시 abstract 키워드를 class 앞에 붙여준다.
      
      · 클래스로서의 객체 생성은 못하지만 새로운 클래스를 작성할 때 부모 클래스로 이용되며 새 클래스 작성을 위한 템플릿이 되어 상속받은 클래스들의 규칙을 주는 용도로 사용 가능하다.
      · 클래스 앞에 'abstract' 키워드를 붙이면 추상 클래스가 생성되며, "객체를 생성할 수 없다"는 점만 빼면 일반 클래스와 다른 점이 없다.
      
      # 추상 메소드
        · 메소드는 접근제어자, 리턴 타입, 이름, 매개변수로 이뤄진 선언부와 메소드의 기능을 정의하는 구현부로 나뉜다.
        · 추상 메소드는 구현부('{}', Body)를 가지지 않는다.
          > 접근제한자 abstract 리턴타입 메소드명();
          
        · 추상 클래스에서 추상 메소드를 제공하는 이유
          추상 클래스를 상속받아 만들어지는 후손 클래스들이 메소드를 처음 선언과 동일하게 재정의해서 사용하라는 의미
          반드시 구현부를 작성해야 하므로 강제성도 가지고 있다.
    * */
    public abstract class testA {
        // field, constructor, method 작성
        // 미완성된 추상 메소드 선언
    }


}
